name: Release
on:
  push:
    paths:
      - 'HeliosLauncher/package.json'
    branches:
      - master
    tags-ignore:
      - '*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Get version
        id: get-version
        shell: bash
        run: |
          VERSION=$(node -p "require('./HeliosLauncher/package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        if: matrix.os == 'macos-latest'
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.get-version.outputs.version }}
          tag_name: v${{ steps.get-version.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Latest Tag
        if: matrix.os == 'macos-latest'
        uses: actions/github-script@v6
        env:
          VERSION: ${{ steps.get-version.outputs.version }}
        with:
          script: |
            const { owner, repo } = context.repo;
            const version = process.env.VERSION;
            console.log('Current version:', version);
            
            // Delete the old latest tag if it exists
            try {
              await github.rest.git.deleteRef({
                owner,
                repo,
                ref: 'tags/latest'
              });
            } catch (e) {
              console.log('No latest tag exists yet');
            }
            
            // Get the SHA of the current commit
            try {
              const { data: { object: { sha } } } = await github.rest.git.getRef({
                owner,
                repo,
                ref: `tags/v${version}`
              });
              
              // Create new latest tag
              await github.rest.git.createRef({
                owner,
                repo,
                ref: 'refs/tags/latest',
                sha
              });
              console.log('Latest tag updated successfully');
            } catch (e) {
              console.error('Error updating latest tag:', e.message);
              core.setFailed(e.message);
            }

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: |
          cd HeliosLauncher
          npm install

      - name: Build/Release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: true
          package_root: HeliosLauncher
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
